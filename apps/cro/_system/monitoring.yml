apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: default
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 52.1.0
    helm:
      releaseName: monitoring
      valuesObject:
        # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
        # https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack?modal=values
        prometheus:
          fullnameOverride: prometheus

          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false

            retentionSize: 4.5GB

            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: [ "ReadWriteOnce" ]
                  resources:
                    requests:
                      storage: 5Gi

          serviceMonitor:
            selfMonitor: true

        grafana:
          defaultDashboardsEnabled: true
          additionalDataSources:
            - name: loki
              orgId: 1
              url: http://loki-gateway.loki
              access: proxy
              isEnabled: true
              type: loki

          adminPassword: z3KT_fWcX_RMok_Vchu

          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
              nginx.ingress.kubernetes.io/proxy-body-size: 20m
            hosts:
              - grafana.cro.sikademo.com
            paths:
              - /
            tls:
              - hosts:
                  - grafana.cro.sikademo.com
                secretName: grafana-tls

          serviceMonitor:
            selfMonitor: true

          grafana.ini:
            server:
              root_url: https://grafana.cro.sikademo.com
            auth.basic:
              enabled: true
            auth:
              disable_login_form: false
            auth.generic_oauth:
              enabled: true
              name: SSO
              allow_sign_up: true
              scopes: "openid profile email"
              auth_url: https://sso.corp.deladog.com/realms/deladog/protocol/openid-connect/auth
              token_url: https://sso.corp.deladog.com/realms/deladog/protocol/openid-connect/token
              api_url: https://sso.corp.deladog.com/realms/deladog/protocol/openid-connect/userinfo
              client_id: grafana
              client_secret: zRH8_627Q_v1AZ_G9Uu
              role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-viewer') && 'Viewer'
              groups_attribute_path: groups
              allowed_groups: "['grafana-admin']"
            # smtp:
            #   enabled: false
            #   host: CHANGE_ME
            #   user:
            #   password:
            #   skip_verify: true
            #   from_address: CHANGE_ME
            #   from_name: Grafana Alerting
            #   startTLS_policy: OpportunisticStartTLS

        alertmanager:
          enabled: false

        defaultRules:
          rules:
            alertmanager: false

        kubeControllerManager:
          enabled: false

        kubeDns:
          enabled: false

        kubeEtcd:
          enabled: false

        kubeScheduler:
          enabled: false

        kubeProxy:
          enabled: false
